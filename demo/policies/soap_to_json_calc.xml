<policies>
    <inbound>
        <base />
        <rewrite-uri template="/calculator.asmx" copy-unmatched-params="false" />
        <set-body template="liquid">
			<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns="http://tempuri.org/">
				<soap:Body>
					<Add>
						<intA>{{context.Request.OriginalUrl.Query.a}}</intA>
						<intB>{{context.Request.OriginalUrl.Query.b}}</intB>
					</Add>
				</soap:Body>
			</soap:Envelope>
		</set-body>
        <set-header name="Content-Type" exists-action="override">
            <value>application/soap+xml; Action="http://tempuri.org/Add"</value>
        </set-header>
        <set-method>POST</set-method>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
        <choose>
            <when condition="@(context.Response.StatusCode < 400)">
                <set-body template="liquid">
                                                    {
  "addResponse" : 
  {
    "addResult" : {{body.envelope.body.AddResponse.AddResult}}
  }
}

                                        </set-body>
            </when>
            <otherwise>
                <set-variable name="old-body" value="@(context.Response.Body.As<string>(preserveContent: true))" />
                <!-- Error response as per https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#7102-error-condition-responses -->
                <set-body template="liquid">
                {
                "error": {
                    "code": "{{body.envelope.body.fault.faultcode}}",
                      "message": "{{body.envelope.body.fault.faultstring}}"
                      }
            }
                </set-body>
                <choose>
                    <when condition="@(string.IsNullOrEmpty(context.Response.Body.As<JObject>(preserveContent: true)["error"]["code"].ToString()) && string.IsNullOrEmpty(context.Response.Body.As<JObject>(preserveContent: true)["error"]["message"].ToString()))">
                        <set-body>@{
                            var newResponseBody = new JObject();
                            newResponseBody["error"] = new JObject();
                            newResponseBody["error"]["code"] = "InvalidErrorResponseBody";
                            if (string.IsNullOrEmpty((string)context.Variables["old-body"]))
                            {
                                newResponseBody["error"]["message"] = "The error response body was not a valid SOAP error response. The response body was empty.";
                            }
                            else
                            {
                                newResponseBody["error"]["message"] = "The error response body was not a valid SOAP error response. The response body was: '" + context.Variables["old-body"] + "'.";
                            }
                            return newResponseBody.ToString();
                        }</set-body>
                    </when>
                </choose>
            </otherwise>
        </choose>
        <set-header name="Content-Type" exists-action="override">
            <value>application/json</value>
        </set-header>
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>